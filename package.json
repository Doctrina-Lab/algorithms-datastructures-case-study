{
  "name": "learn-algorithms-with-js",
  "version": "1.0.0",
  "description": "Learn algorithms and data structures with JavaScript",
  "scripts": {
    "test": "jest",
    "add-up-to": "node problem-solving-patterns/add-up-to.js",
    "same": "node problem-solving-patterns/same.js",
    "valid-anagram": "node problem-solving-patterns/valid-anagram.js",
    "count-unique-values": "node problem-solving-patterns/count-unique-values.js",
    "max-subarray-sum": "node problem-solving-patterns/max-subarray-sum.js",
    "same-frequency": "node problem-solving-patterns/same-frequency.js",
    "are-there-duplicates": "node problem-solving-patterns/are-there-duplicates.js",
    "average-pair": "node problem-solving-patterns/average-pair.js",
    "is-subsequence": "node problem-solving-patterns/is-subsequence.js",
    "min-subarray-len": "node problem-solving-patterns/min-subarray-len.js",
    "find-longest-substring": "node problem-solving-patterns/find-longest-substring.js",
    "countdown": "node recursion/countdown.js",
    "sum-range": "node recursion/sum-range.js",
    "factorialIter": "node recursion/factorial-iter.js",
    "factorialRec": "node recursion/factorial-rec.js",
    "collect-odds-helper-method-rec": "node recursion/collect-odds-helper-method-rec.js",
    "collect-odds-pure-rec": "node recursion/collect-pure-rec.js",
    "power": "node recursion/power.js",
    "product-of-array": "node recursion/product-of-array.js",
    "fib": "node recursion/fib.js",
    "reverse": "node recursion/reverse.js",
    "is-palindrome": "node recursion/is-palindrome.js",
    "some-recursive": "node recursion/some-recursive.js",
    "flatten": "node recursion/flatten.js",
    "capitalize-first": "node recursion/capitalize-first.js"
  },
  "author": "Vova Myroniuk",
  "license": "ISC",
  "devDependencies": {
    "jest": "^29.7.0"
  }
}
